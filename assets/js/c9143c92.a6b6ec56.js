"use strict";(self.webpackChunkopensherlock_github_io=self.webpackChunkopensherlock_github_io||[]).push([[381],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(r),m=o,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1486:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const i={},a="System Overview",c={unversionedId:"overview/index",id:"overview/index",title:"System Overview",description:"At the highest level, OpenSherlock is a society of agents architecture. Some of its agents are:",source:"@site/docs/2-overview/index.md",sourceDirName:"2-overview",slug:"/overview/",permalink:"/overview/",draft:!1,editUrl:"https://github.com/OpenSherlock/opensherlock.github.io/edit/main/docs/2-overview/index.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Usage Guide",permalink:"/introduction/usage"},next:{title:"Anticipatory Story Reader",permalink:"/overview/asr"}},l={},s=[{value:"Architecture",id:"architecture",level:2},{value:"Components",id:"components",level:2}],u={toc:s},p="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"system-overview"},"System Overview"),(0,o.kt)("p",null,"At the highest level, OpenSherlock is a society of agents architecture. Some of its agents are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ASR for reading text documents for the purpose of growing and maintaining models in domains of interest"),(0,o.kt)("li",{parentName:"ul"},"TopicMap for hosting those models"),(0,o.kt)("li",{parentName:"ul"},"TSC for building Qualitative Proceee Theoretic models to add to the TopicMap, and to perform evolutionary discovery of new concepts within those models"),(0,o.kt)("li",{parentName:"ul"},"Literature-based Discovery (LBD) to find unconnected ideas in those models"),(0,o.kt)("li",{parentName:"ul"},"Deep Question Answering to serve as a kind of research interface into those models.")),(0,o.kt)("h2",{id:"architecture"},"Architecture"),(0,o.kt)("mermaid",{value:"flowchart TD\n    Input([Input Text fa:fa-book])\n    SentenceReader[Sentence Reader]\n    WordGramBuilder[WordGram Builder]\n    Dictionary[(Dictionary)]\n    SemanticTuple[Semantic Tuple]\n    WordGramLists[WordGram Lists]\n    Input -- sentence --\x3e SentenceReader\n    SentenceReader -- words --\x3e WordGramBuilder\n    WordGramBuilder -- word --\x3e Dictionary\n    Dictionary -- id --\x3e WordGramBuilder\n    WordGramBuilder --\x3e WordGramLists\n    WordGramLists -.-> SemanticTuple"}),(0,o.kt)("h2",{id:"components"},"Components"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/overview/asr"},"Anticipatory Story Reader")),(0,o.kt)("li",{parentName:"ul"},"Long-term memory"),(0,o.kt)("li",{parentName:"ul"},"Short-term working memory")))}d.isMDXComponent=!0}}]);